File:	Infrastructure.txt
Purpose:Design notes for data collection infrastructure

Overview:

The basic idea is that we have a collection of shell scripts and C
programs that simulate workloads on the server by running one or more program
from the SPEC CPU_2000 benchmarks.  The scripts read a data file that defines
what program to run and where to run the program.  The program runs locally in
the Xen domain0 hypervisor or remotely via SSH in one of the Xen domainU
virtual machines.  We reset the power meter at the start of the run.  The
controlling shell script  waits until all of the SPEC programs complete
execution and then download the data from the power meter into a database on
the Xen domain0 machine.

Server and Network Configuration

The server "canpe" is configured with Fedora Core 5 kernel and Xen domain 0
(hypervisor) enhancements (Linux kernel 2.6.2714xen0). The physical hardware
is a Dell 6450 server with 4 Xeon processors and 8 GB of main memory.  Canpe
automatically starts four virtual machines (canxen1, canxen2, canxen3, and
canxen4) configured with Fedora Core 5 with the Xen domain U (virtual machine)
enhancements (Linux kernel 2.6.274xenU).

Data Collection Process

The data collection process is controlled by the "run_workload.sh" shell
script.  This script runs on the Xen domain0 machine.

The script is called in the following matter:
# run_workload.sh <Name of workload definition file>

The script creates a unique identifier for this run by concatenating the
name of the workload definition file with a timestamp generated by the bash
'date' command.

The scripts reads the "workload_definition_file" to determine what programs to
run.  This file tells the script what program to run and where to run the
program.  If the entry for a program says to run the program as "local", then
we run the program in the background on the domain 0 machine.   Otherwise, we
run the program on the domainU machine whose hostname is in the file.

The script will wait until all programs complete and call the downloadData
program to read the power readings from the meter and write them into a
PostgreSQL database.

Workload Definition File

The workload definition file is a text file with one or more lines in the
format:
'local'|<name of machine>	<name_of_program>

Resetting the Power Meter

The WattsUp power meter memory can be reset by the "resetWU" program.  This
program writes the memory reset command to the WattsUp serial interface.

Downloading data from the Power Meter

The power consumption statistics can be read from the power meter using the
"downloadData" command:
# downloadData <runTag>

This program sends the "download data" command string to the power meter over
its serial interface and then reads the data from the serial interface. The
"<runTag>" string is used to tag the data read from the power meter.   This
should be the unique identifier generated by the run_workload script.

